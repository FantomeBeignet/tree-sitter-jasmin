fn f(reg u64 x) -> reg u64 {
   x += 1;
   return x;
}

fn f2(reg u64 x) -> reg u64
requires #[prover=smt] { x == 1 }
ensures #[prover=smt] { result.0 == x }
{
   x += 1;
   return x;
}


fn g(reg u64 x) -> reg u64 {
   x = x;
   x = f(x);
   x = x;
   x = f2(x);
   return x;
}